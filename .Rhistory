library(qdap)
library("rJava", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(rJava)
remove.packages("rJava")
install.packages(rJava)
install.packages("rjava")
install.packages("rJava")
library("rJava", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
options('java.home')
options("java.home"="/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre")
Sys.setenv(JAVA_HOME='/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home')
Sys.setenv(LD_LIBRARY_PATH='$JAVA_HOME/jre/lib/server')
detach("package:rJava", unload=TRUE)
library(rjava)
library(rJava)
options('java.home')
remove.packages("rJava")
options("java.home"="/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre")
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
library(rJava)
install.packages(rJava)
install.packages("rJava")
library(rJava)
install.packages(tm)
install.packages("tm")
library("tm", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.package("NLP")
install.packages("NLP")
install.packages("NLP")
library("NLP", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages("readr")
36/25*(-4/3)
36/25
(1.92^2)+(1.44^2)
sqrt(5.76)
2.4-1
install.packages(fromJson)
install.packages(fromJSON)
install.paclage(jsonlite)
install.package(jsonlite)
install.packages(jsonlite)
install.packages("jsonlite")
intall.packages (haven)
intall.packages ("haven")
install.packages ("haven")
library(haven)
sugar <- read_dta("http://assets.datacamp.com/production/course_1478/datasets/trade.dta")
View(sugar)
plot(sugar$Import, sugar$Weight_I)
# haven is already loaded
# Import SPSS data from the URL: work
work <- read_sav("http://s3.amazonaws.com/assets.datacamp.com/production/course_1478/datasets/employee.sav")
# Display summary of work$GENDER
summary(work$GENDER)
# Convert work$GENDER to a factor
work$GENDER <- as_factor(work$GENDER)
# Display summary of work$GENDER again
summary(work$GENDER)
View(work)
work$GENDER <- as.Date(work$GENDER)
work$BDATE <- as.Date(work$BDATE)
work$BDATE <- as.Date(as.factor(work$BDATE))
?c
data <- c(1:9)
means <- NA
means<- c(mean, data)
means
NA
x <- na
x <-N
x<- NA
X
x
means <- NA
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
pollutantmean <- function(directory, polutant, id) {
pollutantmean <- function(directory, pollutant, id = 1:332) {
means <- NA
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
for(i in id) {
data <- read.csv(filenames[i])
if(pollutant == "sulfate") {
means <- c(means, data$sulfate)
}
else {
means <- c(means, data$nitrate)
}
}
mean(means, na.rm = TRUE)
}
dir()
setwd("~/Desktop/R/specdata")
pollutantmena(directory = "~/Desktop/R/specdata", pollutant == "sulfate, " , id = 1:332)
pollutantmena(directory = "~/Desktop/R/specdata", pollutant == "sulfate, " , id = 1:332)
pollutantmean(directory = "~/Desktop/R/specdata", pollutant == "sulfate, " , id = 1:332)
pollutantmean <- function(directory="~/Desktop/R/specdata", pollutant = "sulfate", id = 1:332) {
means <- NA
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
for(i in id) {
data <- read.csv(filenames[i])
if(pollutant == "sulfate") {
means <- c(means, data$sulfate)
}
else {
means <- c(means, data$nitrate)
}
}
mean(means, na.rm = TRUE)
}
pollutantmean()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
?dataset
?datasets
library(help = "datasets")
datasets-package {BOD}
BOD
Beaver <- beaver1
View(Beaver)
library(help = "datasets")
trees <- trees
View(trees)
cor(trees$Girth, trees$Volume)
plot(trees$Girth, trees$Volume)
?kmeans
clust <- kmeans(trees, 2, nstart = 20)
clus
clust
?plot
plot(trees$Girth, trees$Volume, col= clust$cluster)
occupationalStatus
mtcars
47+45+58
150-50
150-28-37-40
-5
library(datasets)
data(iris)
?iris
head(iris)
colMeans(iris$Sepal.Length)
colMeans(iris)
mean(iris$Sepal.Length)
colMeans(iris)
apply(iris, 2, mean)
rowMeans(iris[, 1:4])
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
head(mtcars)
?split
sapply(split(mtcars$mpg, mtcars$cyl), mean)
View(mtcars)
debug(ls)
ls
setwd("~/Documents/ProgrammingAssignment2")
